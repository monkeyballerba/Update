--=========================================================
-- ZZZZ HUB v0.4 - Enhanced Tabbed UI with Fixes
--=========================================================
-- Optimized UI with tabbed navigation, fixed variable duplication, and improved error handling

--// Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local ProximityPromptService = game:GetService("ProximityPromptService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local CoreGui = game:GetService("CoreGui")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")

local player = Players.LocalPlayer
local username = player.Name

--// Configuration
local CONFIG = {
    Colors = {
        Background = Color3.fromRGB(20, 20, 20),
        Sidebar = Color3.fromRGB(24, 24, 24),
        Panel = Color3.fromRGB(32, 32, 32),
        Stroke = Color3.fromRGB(60, 60, 60),
        Text = Color3.fromRGB(255, 255, 255),
        SubText = Color3.fromRGB(180, 180, 180),
        Accent = Color3.fromRGB(16, 157, 227),
        Hover = Color3.fromRGB(50, 50, 50),
        Danger = Color3.fromRGB(240, 80, 80),
        SwitchOff = Color3.fromRGB(80, 80, 80),
        SwitchOn = Color3.fromRGB(16, 157, 227),
        SectionHeader = Color3.fromRGB(45, 45, 45),
        ESPHighlight = Color3.fromRGB(255, 0, 0), -- ESP-specific highlight color
    },
    UI = {
        CornerRadius = UDim.new(0, 8),
        AnimationSpeed = 0.25,
        FrameSize = UDim2.new(0, 600, 0, 400),
        SidebarWidth = 150,
        MinimizedSize = UDim2.new(0, 600, 0, 50),
    },
    ESP = {
        UpdateInterval = 0.1,
    },
    DiscordLink = "https://discord.gg/Jg36hRPevv",
}

--=========================================================
-- Safe UI Parent
--=========================================================
local function getSafeUiParent()
    local success, hidden = pcall(function()
        return (gethui and gethui()) or (get_hidden_ui and get_hidden_ui()) or CoreGui
    end)
    if not success then
        warn("Failed to get hidden UI parent: using CoreGui or PlayerGui")
        return CoreGui or player:WaitForChild("PlayerGui")
    end
    return hidden
end
local safeui = getSafeUiParent()

--=========================================================
-- Character Essentials
--=========================================================
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character and character:WaitForChild("Humanoid", 5)
local humanoidRootPart = character and character:WaitForChild("HumanoidRootPart", 5)

-- Packages and Events
local UseItemEvent
local success, result = pcall(function()
    local packages = ReplicatedStorage:WaitForChild("Packages", 5)
    if packages then
        UseItemEvent = packages:FindFirstChild("Net") and packages.Net:FindFirstChild("RE/UseItem")
    end
    return UseItemEvent
end)
if not success or not result then
    warn("Failed to load packages or UseItemEvent: unsupported or missing")
end

--=========================================================
-- Helper Functions
--=========================================================
local function findPlayerPlot()
    local success, plot = pcall(function()
        local plotsFolder = workspace:FindFirstChild("Plots")
        if not plotsFolder then return nil end
        for _, plot in ipairs(plotsFolder:GetChildren()) do
            local plotSign = plot:FindFirstChild("PlotSign")
            if plotSign then
                local surfaceGui = plotSign:FindFirstChild("SurfaceGui")
                local frame = surfaceGui and surfaceGui:FindFirstChild("Frame")
                local textLabel = frame and frame:FindFirstChild("TextLabel")
                if textLabel and textLabel:IsA("TextLabel") and string.find(textLabel.Text, username) then
                    return plot
                end
            end
        end
        return nil
    end)
    if not success or not plot then
        warn("Could not find player plot: unsupported or error occurred")
        return nil
    end
    return plot
end
local playerPlot = findPlayerPlot()

local function findPlayerSpawnPart()
    local plot = findPlayerPlot()
    if not plot then return nil end
    local success, spawnPart = pcall(function()
        local part = plot:FindFirstChild("Spawn")
        return part and part:IsA("BasePart") and part or nil
    end)
    if not success or not spawnPart then
        warn("Spawn part not found in player's plot")
        return nil
    end
    return spawnPart
end

local function findAllSpawnParts()
    local success, spawnParts = pcall(function()
        local plotsFolder = workspace:FindFirstChild("Plots")
        if not plotsFolder then return {} end
        local result = {}
        for _, plot in ipairs(plotsFolder:GetChildren()) do
            local spawnPart = plot:FindFirstChild("Spawn")
            if spawnPart and spawnPart:IsA("BasePart") then
                table.insert(result, spawnPart)
            end
        end
        return result
    end)
    if not success then
        warn("Failed to find spawn parts")
        return {}
    end
    return spawnParts
end

local function findClosestSpawnPart()
    if not character or not character:FindFirstChild("HumanoidRootPart") then return nil end
    local hrp = character.HumanoidRootPart
    local success, closest = pcall(function()
        local spawnParts = findAllSpawnParts()
        local minDist = math.huge
        local closestPart = nil
        for _, spawn in ipairs(spawnParts) do
            local dist = (hrp.Position - spawn.Position).Magnitude
            if dist < minDist then
                minDist = dist
                closestPart = spawn
            end
        end
        return closestPart
    end)
    if not success or not closest then
        warn("Failed to find closest spawn part")
        return nil
    end
    return closest
end

local function findClosestLaserPart()
    if not character or not character:FindFirstChild("HumanoidRootPart") then return nil end
    local hrp = character.HumanoidRootPart
    local success, closest = pcall(function()
        local plotsFolder = workspace:FindFirstChild("Plots")
        if not plotsFolder then return nil end
        local minDist = math.huge
        local closestPart = nil
        for _, plot in ipairs(plotsFolder:GetChildren()) do
            local laserHitbox = plot:FindFirstChild("LaserHitbox")
            local secondFloor = laserHitbox and laserHitbox:FindFirstChild("SecondFloor")
            if secondFloor and secondFloor:IsA("BasePart") then
                local dist = (hrp.Position - secondFloor.Position).Magnitude
                if dist < minDist then
                    minDist = dist
                    closestPart = secondFloor
                end
            end
        end
        return closestPart
    end)
    if not success or not closest then
        warn("Failed to find closest laser part")
        return nil
    end
    return closest
end

local function findClosestDecoration(decorationId)
    if not character or not character:FindFirstChild("HumanoidRootPart") then return nil end
    local hrp = character.HumanoidRootPart
    local success, closest = pcall(function()
        local plotsFolder = workspace:FindFirstChild("Plots")
        if not plotsFolder then return nil end
        local minDist = math.huge
        local closestPart = nil
        for _, plot in ipairs(plotsFolder:GetChildren()) do
            local decorations = plot:FindFirstChild("Decorations")
            if decorations then
                local decoration = decorations:FindFirstChild(tostring(decorationId))
                if not decoration then
                    local kids = decorations:GetChildren()
                    if #kids >= decorationId then decoration = kids[decorationId] end
                end
                if decoration and decoration:IsA("BasePart") then
                    local dist = (hrp.Position - decoration.Position).Magnitude
                    if dist < minDist then
                        minDist = dist
                        closestPart = decoration
                    end
                end
            end
        end
        return closestPart
    end)
    if not success or not closest then
        warn("Failed to find closest decoration for ID: " .. tostring(decorationId))
        return nil
    end
    return closest
end

local function moveToPosition(targetPosition, onReached, speed, stopAtTarget)
    if not character or not targetPosition or typeof(targetPosition) ~= "Vector3" then
        if onReached then onReached(false) end
        return
    end
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then
        if onReached then onReached(false) end
        return
    end

    local success, _ = pcall(function()
        local dist = (hrp.Position - targetPosition).Magnitude
        if dist < 0.5 then
            if stopAtTarget then hrp.CFrame = CFrame.new(targetPosition) end
            if onReached then onReached(true) end
            return
        end

        for _, obj in ipairs(hrp:GetChildren()) do
            if obj:IsA("BodyVelocity") then obj:Destroy() end
        end

        local bv = Instance.new("BodyVelocity")
        bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
        bv.P = 10000
        bv.Velocity = (targetPosition - hrp.Position).Unit * speed
        bv.Parent = hrp

        local reached = false
        local conn = RunService.Heartbeat:Connect(function()
            if not hrp or not hrp.Parent or not bv.Parent then
                bv:Destroy()
                conn:Disconnect()
                if onReached and not reached then onReached(false) end
                return
            end
            local dir = (targetPosition - hrp.Position)
            local dist = dir.Magnitude
            if dist < (stopAtTarget and 0.1 or 5) then
                reached = true
                bv:Destroy()
                if stopAtTarget then
                    hrp.CFrame = CFrame.new(targetPosition)
                    hrp.Velocity = Vector3.new(0, 0, 0)
                    hrp.RotVelocity = Vector3.new(0, 0, 0)
                    for _, obj in ipairs(hrp:GetChildren()) do
                        if obj:IsA("BodyVelocity") or obj:IsA("BodyGyro") or obj:IsA("BodyPosition") then
                            obj:Destroy()
                        end
                    end
                end
                conn:Disconnect()
                if onReached then onReached(true) end
                return
            end
            bv.Velocity = dir.Unit * speed
        end)

        task.delay(5, function()
            if not reached then
                bv:Destroy()
                conn:Disconnect()
                if onReached then onReached(false) end
            end
        end)
    end)
    if not success then
        warn("Move to position failed")
        if onReached then onReached(false) end
    end
end

local function useLaserCape()
    local success, result = pcall(function()
        if not character then return false end
        local hum = character:FindFirstChild("Humanoid")
        local hrp = character:FindFirstChild("HumanoidRootPart")
        if not hum or not hrp then return false end
        local laserCape = player.Backpack:FindFirstChild("Laser Cape") or character:FindFirstChild("Laser Cape")
        if not laserCape then return false end
        if laserCape.Parent ~= character then
            hum:EquipTool(laserCape)
            task.wait(0.1)
        end
        if UseItemEvent then
            UseItemEvent:FireServer(hrp.Position, hrp)
            return true
        end
        return false
    end)
    if not success or not result then
        warn("Failed to use Laser Cape")
        return false
    end
    return result
end

local function isPlayerAtFirstFloor()
    if not character or not character:FindFirstChild("HumanoidRootPart") then return false end
    local hrp = character.HumanoidRootPart
    local success, result = pcall(function()
        return math.abs(hrp.Position.Y - (-5)) < 1
    end)
    if not success then
        warn("Failed to check first floor")
        return false
    end
    return result
end

local function isPlayerAtSecondFloor()
    if not character or not character:FindFirstChild("HumanoidRootPart") then return false end
    local hrp = character.HumanoidRootPart
    local success, result = pcall(function()
        return math.abs(hrp.Position.Y - 12.89) < 1
    end)
    if not success then
        warn("Failed to check second floor")
        return false
    end
    return result
end

local function moveToClosestSpawnThenOwnSpawn()
    local success, _ = pcall(function()
        local closest = findClosestSpawnPart()
        if not closest then return end
        moveToPosition(closest.Position, function(success)
            if success then
                task.wait(0.15)
                local ownSpawn = findPlayerSpawnPart()
                if ownSpawn then
                    local spawnPos = ownSpawn.Position + Vector3.new(-10, -3, 0)
                    moveToPosition(spawnPos, function(_)
                        if character and character:FindFirstChild("HumanoidRootPart") then
                            local hrp = character.HumanoidRootPart
                            hrp.Velocity = Vector3.new(0, 0, 0)
                            hrp.RotVelocity = Vector3.new(0, 0, 0)
                        end
                    end, 300, true)
                end
            end
        end, 150, false)
    end)
    if not success then
        warn("Failed to execute move to closest spawn")
    end
end

local function teleportToLaserThenDecorationThenForwardThenSpawn()
    local success, _ = pcall(function()
        local laserPart = findClosestLaserPart()
        if not laserPart then return end
        moveToPosition(laserPart.Position, function(success)
            if success then
                task.wait(0.10)
                local d14 = findClosestDecoration(14)
                if d14 then
                    moveToPosition(d14.Position, function(ok)
                        if ok then
                            local forwardPos = d14.Position + Vector3.new(-1, 0, 0) * 5.25
                            moveToPosition(forwardPos, function(ok2)
                                if ok2 then
                                    task.wait(0.35)
                                    local spawnPart = findPlayerSpawnPart()
                                    if spawnPart then
                                        local spawnPos = spawnPart.Position + Vector3.new(-6, 0, 0)
                                        moveToPosition(spawnPos, function(_)
                                            if character and character:FindFirstChild("HumanoidRootPart") then
                                                local hrp = character.HumanoidRootPart
                                                hrp.Velocity = Vector3.new(0, 0, 0)
                                                hrp.RotVelocity = Vector3.new(0, 0, 0)
                                            end
                                        end, 300, true)
                                    end
                                end
                            end, 220, false)
                        end
                    end, 50, false)
                end
            end
        end, 100, false)
    end)
    if not success then
        warn("Failed to execute teleport sequence")
    end
end

local function setInvisibility(on)
    local success, _ = pcall(function()
        if not character or not character:FindFirstChild("Humanoid") then return end
        if on then
            for _, v in pairs(character:GetChildren()) do
                if v:IsA("BasePart") then
                    sethiddenproperty(v, "NetworkIsSleeping", true)
                end
            end
            sethiddenproperty(character.Humanoid, "OverrideDefaultCollisions", true)
            replicatesignal(character.Humanoid.ServerBreakJoints)
        else
            for _, v in pairs(character:GetChildren()) do
                if v:IsA("BasePart") then
                    sethiddenproperty(v, "NetworkIsSleeping", false)
                end
            end
            sethiddenproperty(character.Humanoid, "OverrideDefaultCollisions", false)
        end
    end)
    if not success then
        warn("Failed to " .. (on and "enable" or "disable") .. " invisibility")
    end
end

--=========================================================
-- UI Setup: Tabbed Navigation with Sidebar
--=========================================================
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ZZZZ_HUB"
screenGui.DisplayOrder = 2^31 - 1
screenGui.ResetOnSpawn = false
screenGui.Parent = safeui

local mainFrame = Instance.new("Frame")
mainFrame.Name = "Main"
mainFrame.Size = CONFIG.UI.FrameSize
mainFrame.Position = UDim2.new(0.5, -300, 0.5, -200)
mainFrame.BackgroundColor3 = CONFIG.Colors.Panel
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui
Instance.new("UICorner", mainFrame).CornerRadius = CONFIG.UI.CornerRadius
local mainStroke = Instance.new("UIStroke", mainFrame)
mainStroke.Thickness = 1.5
mainStroke.Color = CONFIG.Colors.Stroke
mainStroke.Transparency = 0.2

local topBar = Instance.new("Frame")
topBar.Name = "TopBar"
topBar.Parent = mainFrame
topBar.BackgroundColor3 = CONFIG.Colors.Background
topBar.Size = UDim2.new(1, 0, 0, 50)
topBar.BorderSizePixel = 0
Instance.new("UICorner", topBar).CornerRadius = UDim.new(0, 8)

local logo = Instance.new("ImageLabel")
logo.Name = "Logo"
logo.Parent = topBar
logo.BackgroundTransparency = 1
logo.Size = UDim2.new(0, 40, 0, 40)
logo.Position = UDim2.new(0, 10, 0.5, -20)
logo.Image = "rbxassetid://75526418442243"
Instance.new("UICorner", logo).CornerRadius = UDim.new(0, 8)

local titleHolder = Instance.new("Frame")
titleHolder.Parent = topBar
titleHolder.BackgroundTransparency = 1
titleHolder.Position = UDim2.new(0, 60, 0, 0)
titleHolder.Size = UDim2.new(1, -140, 1, 0)

local title = Instance.new("TextLabel")
title.Parent = titleHolder
title.BackgroundTransparency = 1
title.Text = "ZZZZ HUB"
title.Font = Enum.Font.GothamBold
title.TextSize = 20
title.TextColor3 = CONFIG.Colors.Text
title.TextXAlignment = Enum.TextXAlignment.Left
title.Size = UDim2.new(1, 0, 0.6, 0)
title.Position = UDim2.new(0, 0, 0, 5)

local subtitle = Instance.new("TextLabel")
subtitle.Parent = titleHolder
subtitle.BackgroundTransparency = 1
subtitle.Text = "v0.4 â€¢ Free"
subtitle.Font = Enum.Font.Gotham
subtitle.TextSize = 12
subtitle.TextColor3 = CONFIG.Colors.SubText
subtitle.TextXAlignment = Enum.TextXAlignment.Left
subtitle.Size = UDim2.new(1, 0, 0.4, 0)
subtitle.Position = UDim2.new(0, 0, 0.6, 0)

local minimizeBtn = Instance.new("TextButton")
minimizeBtn.Parent = topBar
minimizeBtn.BackgroundColor3 = CONFIG.Colors.Background
minimizeBtn.Text = "âˆ’"
minimizeBtn.Font = Enum.Font.GothamBold
minimizeBtn.TextSize = 22
minimizeBtn.TextColor3 = CONFIG.Colors.Text
minimizeBtn.AutoButtonColor = false
minimizeBtn.Size = UDim2.new(0, 40, 0, 40)
minimizeBtn.Position = UDim2.new(1, -50, 0.5, -20)
Instance.new("UICorner", minimizeBtn).CornerRadius = UDim.new(0, 8)

-- Sidebar
local sidebar = Instance.new("Frame")
sidebar.Name = "Sidebar"
sidebar.Parent = mainFrame
sidebar.BackgroundColor3 = CONFIG.Colors.Sidebar
sidebar.Size = UDim2.new(0, CONFIG.UI.SidebarWidth, 1, -50)
sidebar.Position = UDim2.new(0, 0, 0, 50)
sidebar.BorderSizePixel = 0
Instance.new("UIStroke", sidebar).Color = CONFIG.Colors.Stroke

local sidebarLayout = Instance.new("UIListLayout")
sidebarLayout.Parent = sidebar
sidebarLayout.Padding = UDim.new(0, 8
